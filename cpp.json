{
	"PS head":
	{
		"prefix": ["hd"],
		"body": [
			"/* Code By [ Your Handle ]",
			"GitHub : [ Your Handle ] */",
			"\n",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define ll long long int",
			"#define INF (ll)999999999999",
			"#define mod (ll)1000000007",
			"#define amod (ll)998244353",
			"#define all(v) (v).begin(), (v).end()",
			"\n",
			"void fastio() {",
			"\tios::sync_with_stdio(false);",
			"\tcin.tie(0);",
			"}",
			"\n",
			"int main() {",
			"\tfastio();",
			"}"
		],
		"description": "make head"
	},
	"test-case-templete":
	{
		"prefix": ["tc"],
		"body": [
			"int T;",
			"cin >> T;",
			"while(T--) { ",
			"\t$0",
			"}"
		],
		"description": "make test case templete"
	},
	"repeat1":
	{
		"prefix": ["rep1"],
		"body": [
			"for(int i=0; i<N; i++) {",
			"\t$0",
			"}"
		],
		"description": "make repeat-1 templete"
	},
	"repeat2":
	{
		"prefix": ["rep2"],
		"body": [
			"for(int i=0; i<N; i++) {",
			"\tfor(int j=0; j<N; j++) {",
			"\t\t$0",
			"\t}",
			"}"
		],
		"description": "make repeat-2 templete"
	},
	"fibobasic":
	{
		"prefix": ["fib"],
		"body": [
			"vector<ll> fibo(1000005);",
			"for(int h=1; h<=1000000; h++) {",
			"\tif(h==1 || h==2) {",
			"\t\tfibo[h]=1;",
			"\t} else {",
			"\t\tfibo[h]=fibo[h-1]+fibo[h-2];",
			"\t}",
			"}",
		],
		"description": "make fibonacci basic templete"
	},
	"bigint_sum":
	{
		"prefix": ["ssum"],
		"body": [
			"string ssum(string sa, string sb) {",
			"\tint tmp = 0;",
			"\tstring res = \"\";",
			"\twhile(!sa.empty() || !sb.empty() || tmp) {",
			"\t\tif(!sa.empty()) {",
			"\t\t\ttmp += (sa.back() - '0');",
			"\t\t\tsa.pop_back();",
			"\t\t}",
			"\t\tif(!sb.empty()) {",
			"\t\t\ttmp += (sb.back() - '0');",
			"\t\t\tsb.pop_back();",
			"\t\t}",
			"\t\tres += ((tmp%10) + '0');",
			"\t\ttmp /= 10;",
			"\t}",
			"\treverse(all(res));",
			"\treturn res;",
			"}",
			"\n"
		],
		"description": "make bigint_sum templete"
	},
}
